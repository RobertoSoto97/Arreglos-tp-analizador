package com.tpi.teoi;

import javax.swing.*;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.util.ArrayList;
import java.util.Comparator;

public class InterfazCompilador extends JFrame {

    private JPanel contentPane;
    private JTextField txtNombre;
    private FileReader fr;
    private File archivo;
    ArrayList<String> rejected;
    private JTable table;

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    InterfazCompilador frame = new InterfazCompilador();
                    frame.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    public InterfazCompilador() {
        setResizable(true);
        setTitle("Interfaz Gr√°fica Compilador - Grupo 1");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 717, 642);
        //setSize(1500,1500);
        setLocationRelativeTo(null); //para centrar la ventana
        
        contentPane = new JPanel();
        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
        setContentPane(contentPane);
                        contentPane.setLayout(null);
                
                        JLabel lblNombreDelArchivo = new JLabel("Archivo de entrada");
                        lblNombreDelArchivo.setBounds(0, 0, 0, 0);
                        contentPane.add(lblNombreDelArchivo);
                
                                                    
                String[] nombreColumnas = {"N", "Name", "Token", "Type", "Value", "Long"};
                contactTableModel.setColumnIdentifiers(nombreColumnas);

                class IntComparator implements Comparator {
                    public int compare(Object o1, Object o2) {
                        Integer int1 = (Integer)o1;
                        Integer int2 = (Integer)o2;
                        return int1.compareTo(int2);
                    }

                    public boolean equals(Object o2) {
                        return this.equals(o2);
                    }
                }

                rowSorter.setComparator(0, new IntComparator());
                                                
                                                        txtNombre = new JTextField();
                                                        txtNombre.setBounds(5, 29, 517, 20);
                                                        contentPane.add(txtNombre);
                                                        txtNombre.setColumns(10);
                                        
                                                JLabel lblCodigoDePrueba = new JLabel("Codigo de entrada");
                                                lblCodigoDePrueba.setBounds(5, 63, 105, 16);
                                                lblCodigoDePrueba.setFont(new Font("Tahoma", Font.PLAIN, 13));
                                                //gbc_lblCodigoDePrueba.gridy = 4;
                                                contentPane.add(lblCodigoDePrueba);
                                        
                                        JButton btnAbrirArchivo = new JButton("Abrir archivo");
                                        btnAbrirArchivo.setBounds(527, 60, 93, 23);
                                        btnAbrirArchivo.addActionListener(new ActionListener() {
                                            public void actionPerformed(ActionEvent e) {
                                                if (txtNombre.getText().isEmpty())
                                                {
                                                    JFileChooser fc = new JFileChooser();
                                                    fc.showOpenDialog(null);
                                                    archivo = fc.getSelectedFile();
                                                    String nombre = archivo.getName();
                                                    txtNombre.setText(archivo.getAbsolutePath());
                                                } else
                                                    {archivo = new File(txtNombre.getText());}

                                                try {
                                                    fr = new FileReader(archivo);
                                                    BufferedReader br = new BufferedReader(fr);
                                                    String texto = "";
                                                    String linea = "";
                                                    while ((linea = br.readLine()) != null) {
                                                        texto += linea + "\n";
                                                    }
                                                    txaArchivo.setText(texto);
                                                } catch (Exception ex) {

                                                }
                                            }
                                        });
                                        //gbc_btnAbrirArchivo.gridy = 3;
                                        contentPane.add(btnAbrirArchivo);
                                        
                                                JButton btnGuardarArchivo = new JButton("Guardar");
                                                btnGuardarArchivo.setBounds(625, 60, 71, 23);
                                                btnGuardarArchivo.addActionListener(new ActionListener() {
                                                    public void actionPerformed(ActionEvent e) {
                                                        String absolutePath = txtNombre.getText();

                                                        FileWriter fw = null;
                                                        try {
                                                            fw = new FileWriter(absolutePath);
                                                        }catch(Exception ex) {
                                                        }
                                                        try {
                                                            BufferedWriter bw = new BufferedWriter(fw);
                                                            bw.write(txaArchivo.getText());
                                                            bw.close();
                                                            JOptionPane.showMessageDialog(null, "Archivo guardado.");
                                                        }catch (Exception ex){

                                                        }
                                                    }
                                                });
                                                contentPane.add(btnGuardarArchivo);
                                
                                        final TextArea txaArchivo = new TextArea();
                                        txaArchivo.setBounds(5, 94, 691, 160);
        // gbc_txaArchivo.gridy = 5;
         contentPane.add(txaArchivo);
                                        
                                         
                                        //JLabel lblResutadosDelAnlisis = new JLabel("Salida del analizador lexico");
                                        JLabel lblResutadosDelAnlisis = new JLabel("Tabla de simbolos - variables y constantes");
                                        lblResutadosDelAnlisis.setBounds(5, 262, 421, 16);
                                        lblResutadosDelAnlisis.setFont(new Font("Tahoma", Font.PLAIN, 13));
                                        //gbc_lblResutadosDelAnlisis.gridy = 7;
                                        contentPane.add(lblResutadosDelAnlisis);
                                        
                                                final JButton btnNewButton = new JButton("Rechazados");
                                                btnNewButton.setBounds(431, 259, 91, 23);
                                                btnNewButton.addActionListener(new ActionListener() {
                                                    public void actionPerformed(ActionEvent e) {
                                                        JOptionPane.showMessageDialog(null, rejected);
                                                    }
                                                });
                                                contentPane.add(btnNewButton);
                                                btnNewButton.setVisible(false);
                                
                                        JButton btnRealizarAnalisis = new JButton("Ejecutar Analizador Lexico");
                                        btnRealizarAnalisis.setBounds(532, 259, 159, 23);
                                        btnRealizarAnalisis.addActionListener(new ActionListener() {
                                            public void actionPerformed(ActionEvent e) {
                                                try {
                                                    Lexico Lexer = new Lexico(new StringReader(txaArchivo.getText()));
                                                    Lexer.next_token();

                                                    /* Code to update table */
                                                    
                                                    DefaultTableModel model = (DefaultTableModel) tabla_simbolos.getModel();
                                                    
                                                    model.setRowCount(0);
                                                    
                                                    
                                                    ArrayList<Symbol> symbols_table = Lexer.get_result();
                                                    rejected = Lexer.get_rejected();
                                                    if (rejected.size() > 0)
                                                        btnNewButton.setVisible(true);
                                                    else
                                                        btnNewButton.setVisible(false);

                                                    for (Symbol s : symbols_table) { 
                                                    	//model.addRow(new Object[] {s.getOrder(),s.getValue(),s.getToken()});
                                                    	model.addRow(new Object[]{Integer.valueOf(s.getOrder()), s.getName(), s.getToken(), s.getType(), s.getValue(), String.valueOf(s.getSize())});
                                                    }
                                                    tabla_simbolos.setModel(model);
                                                    tabla_simbolos.repaint();
                                                    
                                                  /**/
                                                } catch (Exception ex) {
                                                    JOptionPane.showMessageDialog(null, ex.toString());
                                                }
                                            }
                                        });
                                        contentPane.add(btnRealizarAnalisis);
                                final JTable tabla_simbolos = new JTable();
                                DefaultTableModel contactTableModel = (DefaultTableModel) tabla_simbolos.getModel();
                                tabla_simbolos.getColumn(nombreColumnas[0]).setMinWidth(30);
                                tabla_simbolos.getColumn(nombreColumnas[0]).setMaxWidth(30);
                                tabla_simbolos.getColumn(nombreColumnas[1]).setPreferredWidth(200);
                                tabla_simbolos.getColumn(nombreColumnas[2]).setPreferredWidth(100);
                                tabla_simbolos.getColumn(nombreColumnas[3]).setPreferredWidth(30);
                                tabla_simbolos.getColumn(nombreColumnas[4]).setPreferredWidth(100);
                                tabla_simbolos.getColumn(nombreColumnas[5]).setPreferredWidth(30);
                                tabla_simbolos.setAutoCreateRowSorter(true);
                                TableRowSorter<DefaultTableModel> rowSorter = (TableRowSorter<DefaultTableModel>) tabla_simbolos.getRowSorter();
                                tabla_simbolos.setRowSorter(rowSorter);
                                
                                  JScrollPane scrollPane = new JScrollPane(tabla_simbolos);
                                  scrollPane.setBounds(5, 287, 691, 27);
                                  contentPane.add( scrollPane);
                               
                               // contentPane.add()
                                
      }

	
    
  
    	
    
}
